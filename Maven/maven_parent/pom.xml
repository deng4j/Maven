<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.itheima</groupId>
    <artifactId>maven_parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <!--聚合工程所包含的子模块名称-->
    <modules>
        <module>SSM</module>
        <module>domain</module>
        <module>dao</module>
    </modules>

    <!-- - 作用-->
    <!-- - 聚合用于快速构建项目-->
    <!-- - 继承用于快速配置-->
    <!-- - 相同点：-->
    <!-- - 聚合与继承的pom.xml文件打包方式均为pom，可以将两种关系制作到同一个pom文件中-->
    <!-- - 聚合与继承均属于设计型模块，并无实际的模块内容-->
    <!-- - 不同点：-->
    <!-- - 聚合是在当前模块中配置关系，聚合可以感知到参与聚合的模块有哪些-->
    <!-- - 继承是在子模块中配置关系，父模块无法感知哪些子模块继承了自己-->


    <!--定义自定义版本属性-->
    <properties>
        <spring.version>5.2.10.RELEASE</spring.version>
        <mybatis.version>3.5.5</mybatis.version>
        <mybatis-spring.version>2.0.5</mybatis-spring.version>
        <mysql.version>5.1.46</mysql.version>
        <servlet.version>3.1.0</servlet.version>
        <jackson-databind.version>2.9.0</jackson-databind.version>

        <!--控制properties文件-->
        <!--<jdbc.url>jdbc:mysql://localhost:3306/ssm_db?useSSL=false</jdbc.url>-->
    </properties>

    <!--配置子工程中可选的依赖关系-->
    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis-spring.version}</version>
            </dependency>



            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${servlet.version}</version>
                <scope>provided</scope>
            </dependency>
            <!--springmvc-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson-databind.version}</version>
            </dependency>

            <!--切面-->
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>1.3.2</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>1.9.4</version>
            </dependency>

            <!--spring整合mybatis-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>1.1.16</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>5.2.9.RELEASE</version>
            </dependency>


        </dependencies>
    </dependencyManagement>


    <build>
        <!--开启资源文件目录加载属性的过滤器-->
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <!--细粒度控制跳过测试-->
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.12.4</version>
                <configuration>
                    <skipTests>true</skipTests>
                    <!--排除不参与测试的包-->
                    <excludes>
                        <exclude>**/User*TestCase.java</exclude>
                    </excludes>

                    <!--包含测试-->
                    <includes>
                        <include>**/Dao*TestCase.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>16</source>
                    <target>16</target>
                </configuration>
            </plugin>
        </plugins>
    </build>


    <!--配置多环境：mvn install –P env_dev-->
    <profiles>
        <!--开发环境-->
        <profile>
            <id>env_dev</id>
            <properties>
                <jdbc.url>jdbc:mysql://127.0.0.1:3306/ssm_db?useSSL=false</jdbc.url>
            </properties>
            <!--默认启动：开发环境-->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!--生产环境-->
        <profile>
            <id>env_pro</id>
            <properties>
                <jdbc.url>jdbc:mysql://127.0.0.2:3306/ssm_db?useSSL=false</jdbc.url>
            </properties>
        </profile>
        <!--测试环境-->
        <profile>
            <id>env_test</id>
            <properties>
                <jdbc.url>jdbc:mysql://127.0.0.3:3306/ssm_db?useSSL=false</jdbc.url>
            </properties>
        </profile>

    </profiles>

    <!--配置当前项目访问私服上传资源的保存位置-->
    <distributionManagement>
        <repository>
            <!--和maven/settings.xml中server中的id一致，表示使用该id对应的用户名和密码-->
            <id>itheima.release</id>
            <!--如果jar的版本是release版本，那么就上传到这个仓库，根据自己情况修改-->
            <url>http://localhost:8081/repository/itheima.release/</url>
        </repository>
        <snapshotRepository>
            <!--和maven/settings.xml中server中的id一致，表示使用该id对应的用户名和密码-->
            <id>itheima.snapshots</id>
            <!--如果jar的版本是snapshot版本，那么就上传到这个仓库，根据自己情况修改-->
            <url>http://localhost:8081/repository/itheima.snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

</project>